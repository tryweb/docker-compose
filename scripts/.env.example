# ----------------------------------------------------------------------
# Backup腳本 (@scripts/backup.sh) 設定
# ----------------------------------------------------------------------

# --- 基本備份設定 ---
# 備份來源目錄 (此為必須項目，建議在命令列中透過 --source 指定)
# SOURCE_DIR="/path/to/source" or "RemoteName:path/to/source"

# 備份目標根目錄
DEST_ROOT="/volumeUSB1/usbshare1-2/Data-Server"

# 備份任務名稱 (用於日誌和鎖定檔案)
NAME="backup_job"

# --- Log 設定 ---
# Log 檔案存放的根目錄
LOG_DIR_BASE="/var/log/backuplog"

# Log 檔案保留天數
RETENTION_DAYS=7

# --- 備份工具設定 ---
# 選擇使用的工具: "rsync" 或 "rclone"
TOOL="rsync"

# 頻寬限制 (單位: KB/s)
BW_LIMIT=10000

# [Rclone 專用] 額外的 rclone 參數 (以空格分隔)
# 範例: RCLONE_ARGS="--no-traverse --max-age 48h --fast-list"
RCLONE_ARGS="--no-traverse --max-age 48h"

# [Rsync 專用] 是否啟用 --whole-file (true/false)
# RSYNC_WHOLE_FILE=false

# --- 排除檔案設定 ---
# 全域排除檔案的路徑 (每行一個排除模式)
# EXCLUDE_FILE="/path/to/your/exclude_file.txt"

# 排除模式 (以空格分隔，記得用引號包起來)
# 範例: RSYNC_EXCLUDE_PATTERNS="#recycle .DS_Store 'some dir'"
RSYNC_EXCLUDE_PATTERNS=""

# ----------------------------------------------------------------------
# NFS 掛載點檢查設定
# ----------------------------------------------------------------------

# NFS 掛載點清單，格式為 JSON 陣列
# [Rsync 專用] 檢查指定的 NFS 掛載點是否存在，格式為 JSON 陣列
# NFS_MOUNTS='[{"/nfs/share1":"server1:/export/data"},{"/nfs/share2":"server2:/export/media"}]'


# ----------------------------------------------------------------------
# Discord 通知與 AI 摘要設定
# ----------------------------------------------------------------------

# --- Discord 通知 ---
# 是否發送 Discord 通知 (true/false)
SEND_DISCORD=true

# Discord Webhook URL (請填寫您的 URL)
DISCORD_WEBHOOK="https://discord.com/api/webhooks/..."

# send_logs_to_discord.sh 腳本的路徑
DISCORD_SCRIPT="/root/scripts/send_logs_to_discord.sh"

# --- AI 摘要 ---
# 是否啟用 AI 摘要 (true/false)
SUMMARIZE=true

# ai_proc_log.sh 腳本的路徑
AI_SCRIPT="/root/scripts/ai_proc_log.sh"

# AI 摘要前要從 Log 中排除的文字模式 (grep -v 的正則表達式)
GREP_EXCLUDE_PATTERN="[0-9]%|ETA"

# ----------------------------------------------------------------------
# 透過 REMOTE_CONFIG_URL 定義以下相關的 AI 參數
# ----------------------------------------------------------------------
REMOTE_CONFIG_URL="https://gist.githubusercontent.com/YourUsername/YourGistID/raw/.../log_analyzer.conf"


# ----------------------------------------------------------------------
# AI Log Processor腳本 (@scripts/ai_proc_log.sh) 設定
# ----------------------------------------------------------------------

# 選擇要使用的 API 服務: "ollama" 或 "openrouter"
API_SERVICE="openrouter"

# --- AI Prompt 設定 ---
# 自訂 AI 分析 Log 時使用的 Prompt 文字
# 如果不設定，將使用預設的中文 Log 分析 Prompt
# PROMPT_TEXT="請分析以下 Log 內容，並提供一個簡潔的摘要。請以正體中文回覆重點摘要。請列出：
# 1. 重要的錯誤訊息（如果有）。
# 2. 關鍵事件的時間點。
# 3. 問題的可能原因和解決建議。
# 最後彙整花費時間、同步檔案大小與數量"

# --- Ollama 設定 ---
# 如果你使用 Ollama，請設定以下參數
# OLLAMA_API_URL="http://localhost:11434/api/generate"
# OLLAMA_MODEL="llama3"
# OLLAMA_MODEL_BAK="deepseek-v3.1"  # 支援多組備用模型，以逗號分隔: "model1,model2,model3"

# --- OpenRouter 設定 ---
# 如果你使用 OpenRouter，請設定你的 API 金鑰和模型
OPENROUTER_API_KEY="YOUR_OPENROUTER_API_KEY"
#OPENROUTER_MODEL="google/gemini-2.5-flash-lite"
#OPENROUTER_MODEL_BAK="google/gemini-2.5-pro"  # 支援多組備用模型，以逗號分隔: "model1,model2,model3"

